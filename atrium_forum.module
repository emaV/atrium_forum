<?php

include_once('atrium_forum.features.inc');

/**
 * Implementation of hook_init().
 */
function atrium_forum_init() {
  drupal_add_css(drupal_get_path('module', 'atrium_forum') .'/atrium_forum.css');
}

function atrium_forum_page($tid = 0) {

  // get tid from group context/path
  if (!is_numeric($tid)) {
    return MENU_NOT_FOUND;
  }
  elseif ($tid == 0) {
    //get the group node from group context
    $node = og_get_group_context();
    // get group taxonomy from nat
    $nat = array_shift($node->nat);
    if (isset($nat->tid)) {
       $tid = $nat->tid;
    }
  }

  // get forum topics
  $forum_per_page = variable_get('forum_per_page', 25);
  $sortby = variable_get('forum_order', 1);
  $forums = forum_get_forums($tid);
  $parents = taxonomy_get_parents_all($tid);
  if ($tid && !in_array($tid, variable_get('forum_containers', array()))) {
    $topics = forum_get_topics($tid, $sortby, $forum_per_page);
  }

  if (empty($topics)) {
    $path = "node/add/forum" . (($tid>0) ? "/{$tid}" : '');
    $item = menu_get_item($path);
    if ($item && $item['access']) {
      $type = 'forum';
      $links = array(
        $type => array(
          'title' => $item['title'],
          'href'  => $path,
        )
      );
      $output  = '<div class="view-empty">';
      $output .= t('Please add your first @type to get started.', array('@type' => node_get_types('name', $type)));
      $output .= "<div class='buttons'>". theme('links', $links) ."</div>";
      $output .= '</div>';
    }
  }
  else {
    $parents = taxonomy_get_parents_all($tid);
    if ($tid && !in_array($tid, variable_get('forum_containers', array()))) {
      $topics = forum_get_topics($tid, $sortby, $forum_per_page);
    }
    $output = theme('forums', $forums, $topics, $parents, $tid, $sortby, $forum_per_page);
  }
  return $output;
}

/**
 * Implementation of hook_validate().
 */
function atrium_forum_tree_form_validate($form, &$form_state) {
  // @TODO remove this hack
//dpm($form, 'atrium_forum_tree_form_validate > form');
//  dpm($form_state, 'atrium_forum_tree_form_validate > form_state');
}

function atrium_forum_tree_form_submit($form, &$form_state) {
//dpm($form, 'atrium_forum_tree_form_submit > form');
//  dpm($form_state, 'atrium_forum_tree_form_submit > form_state');
}

/**
 * Forum container admin form.
 */
function atrium_forum_tree_form(&$form_state, $node) {

  // get children terms
  // @TODO why "auto loader" (%node) in hook_menu fails to load NAT data?
  $nid = $node->nid;

  // get group taxonomy from nat
  $nat = array_shift(nat_get_terms($nid));
  $vocabulary = taxonomy_vocabulary_load($nat->vid);
  $nat_children = taxonomy_get_tree($nat->vid, $nat->tid);
  $nat_terms = array($nat->tid => $nat);
  drupal_set_title(t('Forum container in %vocabulary', array('%vocabulary' => $vocabulary->name)));

  // check for children
  if (count($nat_children)>0) {
    foreach ($nat_children as $nat_term) {
      $nat_terms[$nat_term->tid] = $nat_term;
    }
//dpm($nat_terms, 'atrium_forum_tree_form > nat_terms');

    // get taxonomy_overview_terms form (used by forum_overview BTW)
    module_load_include('inc', 'taxonomy', 'taxonomy.admin');
    $form = taxonomy_overview_terms($form_state, $vocabulary);
//dpm($form, 'atrium_forum_tree_form >taxonomy_overview_terms');
    // filter out not needed terms
    foreach (element_children($form) as $key) {
      if (isset($form[$key]['#term']) && $tid = $form[$key]['#term']['tid']) {
        if (array_key_exists($tid, $nat_terms)) {
          if ($form[$key]['#term']['tid'] == $nat->tid) {
            unset($form[$key]);
          }
          else {
            $form[$key]['#term']['depth']--;
  //dpm( $form[$key], "atrium_forum_tree_form > $key");
          }
        }
        else {
          unset($form[$key]);
        }
      }
    }

    // Remove the alphabetical reset.
    unset($form['reset_alphabetical']);

    // The form needs to have submit and validate handlers set explicitly.
    $form['#theme'] = 'taxonomy_overview_terms';
    $form['submit']['#weight'] = 99;
    $form['#submit'] = array('atrium_forum_tree_form_submit', 'taxonomy_overview_terms_submit');
  //  $form['#validate'] = array('taxonomy_overview_terms_validate');
    $form['#validate'] = array('atrium_forum_tree_form_validate');
  }

  // Add container link
  $path = "node/$nid/forum/add";
  $item = menu_get_item($path);
  if ($item && $item['access']) {
    $type = 'forum';
    $links = array(
      $type => array(
        'title' => $item['title'],
        'href'  => $path,
      )
    );
    $output  = '<div class="view-empty">';
    if (count($nat_children)>0) {
      $output .= t('Add a Forum Container.');
    }
    else {
      $output .= t('Please add your first Forum Container to get started.');
    }
    $output .= "<div class='buttons'>". theme('links', $links) ."</div>";
    $output .= '</div>';
  }
  $form['container'] = array('#value' => $output);


  $form['debug'] = array(
    '#type' => 'fieldset',
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
    '#title' => 'Debug',
    'debugm' => array('#value' => '<h3>form</h3><pre>' . print_r($form, TRUE) . '</pre>'),
    'debug2' => array('#value' => '<h3>node</h3><pre>' . print_r($node, TRUE) . '</pre>'),
  );

  return $form;

}


function atrium_forum_add_form(&$form_state, $node) {

  // get children terms
  // @TODO why "auto loader" (%node) in hook_menu fails to load NAT data?
  $nid = $node->nid;

  // get group taxonomy from nat
  $nat = array_shift(nat_get_terms($nid));
  $nat_children = taxonomy_get_tree($nat->vid, $nat->tid);
  $nat_terms = array($nat->tid => $nat);
  if (count($nat_children)>0) {
    foreach ($nat_children as $nat_term) {
      $nat_terms[$nat_term->tid] = $nat_term;
    }
  }

  // load taxonomy term form
  module_load_include('inc', 'taxonomy', 'taxonomy.admin');
  $vocabulary = taxonomy_vocabulary_load($nat->vid);
  $form = taxonomy_form_term($form_state, $vocabulary);
  drupal_set_title(t('Add Forum Container in %forum', array('%forum' => $nat->name)));

  // set parent
  $form['parent'] = array('#type' => 'value', '#value' => $nat->tid);
  unset($form['advanced']);

  // add form handlers
  $form['#validate'] = array('taxonomy_form_term_validate');
  $form['#submit'] = array('taxonomy_form_term_submit');

  $form['destination']['#value'] = "node/{$nat->vid}/forum";
  $form['identification']['name']['#title'] = t('Forum Container');

  return $form;

}

/**
 * Access callback
 */
function atrium_forum_access_forum_admin() {

  //get the group node from group context
  $node = og_get_group_context();

  if ($node->type == 'group') {
    $access = og_is_group_admin($node) || user_access('administer features') || spaces_access_admin();
    return $access;
   }
  else {
    return FALSE;
  }
}

/**
 * Implementation of hook_menu().
 */
function atrium_forum_menu() {
  $items = array();
  $items['node/%node/forum'] = array(
    'title' => 'Forum',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('atrium_forum_tree_form', 1),
    'access callback' => 'atrium_forum_access_forum_admin',
//    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
  );
  $items['node/%node/forum/add'] = array(
    'title' => 'Add Forum Container',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('atrium_forum_add_form', 1),
    'access callback' => 'atrium_forum_access_forum_admin',
//    'access arguments' => array(1),
    'weight' => 99,
    'type' => MENU_DEFAULT_LOCAL_TASK,
//    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

/**
 * Implements hook_menu_alter().
 */
function atrium_forum_menu_alter(&$items) {
  $items['forum']['page callback'] = 'atrium_forum_page';

//  $items['forum']['type'] = MENU_DEFAULT_LOCAL_TASK;
/*
  foreach($items as $key => $item) {
    if ( ($p = strpos($key, 'forum')) && ($p >= 0)) {
      dpm($item, "atrium_forum_menu_alter > $key");
    }
  }

dpm($items['forum'], 'atrium_forum_menu_alter > forum');
//dpm($items['notebook'], 'atrium_forum_menu_alter > notebook');
*/
}

/**
 * Implementation of hook_atrium_admin_links_alter().
 */
function atrium_forum_atrium_admin_links_alter(&$links, $space) {
  global $user;
  if (atrium_forum_access_forum_admin()) {
    $links['settings'] = array('title' => "Forum" , 'href' => "node/{$space->id}/forum");
  }
}


/**
 * Implementation of hook_theme_registry_alter().
 * - override forum overview template;
 */
function atrium_forum_theme_registry_alter(&$theme_registry) {

  // Get atrium_username module path.
  $atrium_forum_path = drupal_get_path('module', 'atrium_forum');
  array_unshift($theme_registry['forums']['theme paths'], $atrium_forum_path);
  // @TODO remove lines below (for some reason drupal is not considering 'theme paths')
  $theme_registry['forums']['theme path'] = $atrium_forum_path;
  $theme_registry['forums']['template'] = $atrium_forum_path . '/forums';

}

/**
 * Implements hook_form_alter().
 * - modify forum_node_form
 */
function atrium_forum_form_alter(&$form, $form_state, $form_id) {

  // Auto-select group's forum when adding/editing a forum topic
  if ($form_id == 'forum_node_form') {

    // get the forum tid from args
    $arg_tid = (int) array_pop(arg());

    //get the group node from group context
    $node = og_get_group_context();

    // get group taxonomy from nat
    $nat = array_shift($node->nat);

    // get children terms
    $nat_children = taxonomy_get_tree($nat->vid, $nat->tid);
    $nat_terms = array($nat->tid => $nat);
    if (count($nat_children)>0) {
      foreach ($nat_children as $nat_term) {
        $nat_terms[$nat_term->tid] = $nat_term;
      }
    }

    // remove taxonomy options (keep only nat term and children)
    foreach ($form['taxonomy'][$nat->vid]['#options'] as $key => $val) {
      if (isset($val->option) && ($tid = key($val->option))) {
        if (($tid != $nat->tid) && !array_key_exists($tid, $nat_terms)) {
          unset($form['taxonomy'][$nat->vid]['#options'][$key]);
        }
      }
    }

    // set default value
    $default_tid = array_key_exists($arg_tid, $nat_terms) ? $arg_tid : $nat->tid;
    $form['taxonomy'][$nat->vid]['#default_value'] = array($default_tid);
  }
  elseif ($form_id == 'taxonomy_form_term') {
    $form['identification']['name']['#title'] = t('Forum Container');
  }
}


/**
 * Block atrium_forum_list callback.
 */
function atrium_forum_list_block() {
  //get the group node from group context
  $node = og_get_group_context();

  // get children terms
  // @TODO why "auto loader" (%node) in hook_menu fails to load NAT data?
  $nid = $node->nid;

  // get group taxonomy from nat
  $nat = array_shift(nat_get_terms($nid));

  // get children terms
  $nat_children = taxonomy_get_tree($nat->vid, $nat->tid);
  $nat_terms = array($nat->tid => $nat);

  if (count($nat_children)>0) {

    // get tree from flat array
    // http://stackoverflow.com/a/2916150
    $nat_flat[$nat->tid] = array(
      'link' => array(
        'title' => $nat->name,
        'href'  => "forum/" . $nat->tid,
      ),
      'expanded' => TRUE,
      'has_children' => TRUE,
    );
    foreach ($nat_children as $term) {
      if (!isset($nat_flat[$term->tid])) {
        $nat_flat[$term->tid] = array(
          'link' => array(
            'title' => $term->name,
            'href'  => "forum/" . $term->tid,
            'expanded' => TRUE,
          ),
        );
      }
      $parent = current($term->parents);
      $nat_flat[$parent]['below'][$term->tid] =& $nat_flat[$term->tid];
      $nat_flat[$parent]['link']['expanded'] = $nat_flat[$parent]['link']['has_children'] = TRUE;
    }
    $nat_tree = array(
      $nat->tid => $nat_flat[$nat->tid],
    );
    $block['subject'] = 'Forum list';
    $block['content'] = menu_tree_output($nat_tree);
  }
/*
  $block['content']  .= '<hr /><h4>nat</h4><pre>' . print_r($nat, TRUE) . '</pre><hr />';
  $block['content']  .= '<hr /><h4>nat_menu</h4><pre>' . print_r($nat_menu, TRUE) . '</pre><hr />';
  $block['content']  .= '<hr /><h4>nat_tree</h4><pre>' . print_r($nat_tree, TRUE) . '</pre><hr />';
  $block['content']  .= '<hr /><h4>nat_terms</h4><pre>' . print_r($nat_terms, TRUE) . '</pre><hr />';
  $block['content']  .= '<hr /><h4>nat_children</h4><pre>' . print_r($nat_children, TRUE) . '</pre><hr />';
*/
  return $block;
}

/**
 * Implementation of hook_block().
 */
function atrium_forum_block($op = 'list', $delta = 0) {
  switch ($op) {
    case 'list':
      return array(
        'atrium_forum_list' => array('info' => t('Forum List'), 'cache' => BLOCK_NO_CACHE),
      );
    case 'configure':
      return array();
    case 'save':
      return;
    case 'view':
      $block = array();
      switch ($delta) {
        case 'atrium_forum_list':
          $block = atrium_forum_list_block();
/*
          $space = spaces_get_space();
          if ($space->type == 'og') {
            $block['subject'] = t('Welcome to !group', array('!group' => $space->group->title));
            if (!empty($space->group->body)) {
              $block['content'] = check_markup($space->group->body, $space->group->format);
            }
            else {
              $block['content'] = $space->group->og_description;
            }
          }
*/
          break;
      }
      return $block;
  }
}

/**
 * Implements hook_preprocess_node().
 */
function atrium_forum_preprocess_node($vars) {
  if ($vars['node']->type == 'forum') {
    $vars['body'] = $vars['content'];
    if (!empty($vars['terms'])) {
      $label = t('Forum');
      $terms = "<div class='field terms clear-block'><span class='field-label-inline-first'>{$label}:</span> {$vars['terms']}</div>";
      $vars['content'] =  $terms . $vars['content'];
      unset($vars['terms']);
    }
  }
}


